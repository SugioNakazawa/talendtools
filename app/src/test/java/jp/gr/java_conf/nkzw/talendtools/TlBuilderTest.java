/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package jp.gr.java_conf.nkzw.talendtools;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;

import java.nio.file.Files;
import java.nio.file.Paths;

import org.junit.jupiter.api.Test;

class TlBuilderTest {
    // // 標準出力チェック用
    // private ByteArrayOutputStream _baos;
    // private PrintStream _out;

    // @BeforeEach
    // public void setUp() {
    // _baos = new ByteArrayOutputStream();
    // _out = System.out;
    // System.setOut(
    // new PrintStream(
    // new BufferedOutputStream(_baos)));
    // }

    // @AfterEach
    // public void tearDown() {
    // System.setOut(_out);
    // }

    /**
     * 正常パターン：統計情報なし
     * directory: test01
     */
    @Test
    void testNormal() {
        String[] args = {
                "-w", Paths.get("src/test/resources/testNormal").toString(),
                "-p", "EXAMPLE",
                "-o", Paths.get("src/test/resources/testNormal/tmp").toAbsolutePath().toString(),
                "-show",
                "-out_components"
        };
        try {
            TlBuilder.main(args);

            String actual = Files.readString(Paths.get("src/test/resources/testNormal/tmp/EXAMPLE.txt"));
            String expect = Files.readString(Paths.get("src/test/resources/testNormal/expect/expect.dat"));

            assertEquals(expect, actual, "result match OK");
        } catch (Exception e) {
            e.printStackTrace();
            fail();
        }
    }

    /**
     * 正常パターン：統計情報付き
     * directory: test02
     */
    @Test
    void testNormalWithStat() {
        String[] args = {
                "-w", Paths.get("src/test/resources/testNormalWithStat").toString(),
                "-p", "EXAMPLE",
                "-o", Paths.get("src/test/resources/testNormalWithStat/tmp").toAbsolutePath().toString(),
                "-s", "src/test/resources/testNormalWithStat/stats_file.dat",
                "-show",
                "-out_components"
        };
        try {
            TlBuilder.main(args);

            String actual = Files.readString(Paths.get("src/test/resources/testNormalWithStat/tmp/EXAMPLE.txt"));
            String expect = Files.readString(Paths.get("src/test/resources/testNormalWithStat/expect/expect.dat"));

            assertEquals(expect, actual, "result match OK");
        } catch (Exception e) {
            e.printStackTrace();
            fail();
        }
    }

    /**
     * DB接続
     */
    @Test
    void testConnection() {
        String[] args = {
                "-w", Paths.get("src/test/resources/testConnection").toString(),
                "-p", "TALENDTOOLS",
                "-o", Paths.get("src/test/resources/testConnection/tmp").toAbsolutePath().toString(),
                "-show",
                "-out_connections"
        };
        try {
            TlBuilder.main(args);

            String actual = Files.readString(Paths.get("src/test/resources/testConnection/tmp/mssql_0.1.item.txt"));
            String expect = Files.readString(Paths.get("src/test/resources/testConnection/expect/mssql_0.1.item.txt"));
            assertEquals(expect, actual, "result match OK");
        } catch (Exception e) {
            e.printStackTrace();
            fail();
        }
    }
    @Test
    void testOutputDdl() {
        String[] args = {
                "-w", Paths.get("src/test/resources/testOutputDdl").toString(),
                "-p", "TALENDTOOLS",
                "-o", Paths.get("src/test/resources/testOutputDdl/tmp").toAbsolutePath().toString(),
                "-show",
                "-out_ddl"
        };
        try {
            TlBuilder.main(args);

            String actual = Files.readString(Paths.get("src/test/resources/testOutputDdl/tmp/create_mssql_0.1.item.sql"));
            String expect = Files.readString(Paths.get("src/test/resources/testOutputDdl/expect/create_mssql_0.1.item.sql"));
            assertEquals(expect, actual, "result match OK");
        } catch (Exception e) {
            e.printStackTrace();
            fail();
        }
    }

}
